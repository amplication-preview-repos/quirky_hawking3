/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  Min,
  Max,
  IsOptional,
  IsString,
  MaxLength,
  IsNumber,
  ValidateNested,
} from "class-validator";
import { CategoryWhereUniqueInput } from "../../category/base/CategoryWhereUniqueInput";
import { Type } from "class-transformer";
import { ReviewsCreateNestedManyWithoutProductsInput } from "./ReviewsCreateNestedManyWithoutProductsInput";
import { WishlistItemsCreateNestedManyWithoutProductsInput } from "./WishlistItemsCreateNestedManyWithoutProductsInput";
import { CartItemsCreateNestedManyWithoutProductsInput } from "./CartItemsCreateNestedManyWithoutProductsInput";
import { OrderItemCreateNestedManyWithoutProductsInput } from "./OrderItemCreateNestedManyWithoutProductsInput";

@InputType()
class ProductCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  productId?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  stockQuantity?: number | null;

  @ApiProperty({
    required: false,
    type: () => CategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => CategoryWhereUniqueInput, {
    nullable: true,
  })
  category?: CategoryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ReviewsCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => ReviewsCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => ReviewsCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  reviewsItems?: ReviewsCreateNestedManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => WishlistItemsCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => WishlistItemsCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => WishlistItemsCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  wishlistItemsItems?: WishlistItemsCreateNestedManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => CartItemsCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => CartItemsCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => CartItemsCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  cartItemsItems?: CartItemsCreateNestedManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => OrderItemCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => OrderItemCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => OrderItemCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  orderItems?: OrderItemCreateNestedManyWithoutProductsInput;
}

export { ProductCreateInput as ProductCreateInput };
