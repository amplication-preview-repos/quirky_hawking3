/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { CategoryWhereUniqueInput } from "../../category/base/CategoryWhereUniqueInput";
import { ReviewsListRelationFilter } from "../../reviews/base/ReviewsListRelationFilter";
import { WishlistItemsListRelationFilter } from "../../wishlistItems/base/WishlistItemsListRelationFilter";
import { CartItemsListRelationFilter } from "../../cartItems/base/CartItemsListRelationFilter";
import { OrderItemListRelationFilter } from "../../orderItem/base/OrderItemListRelationFilter";

@InputType()
class ProductWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  productId?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  price?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  stockQuantity?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => CategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => CategoryWhereUniqueInput, {
    nullable: true,
  })
  category?: CategoryWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ReviewsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReviewsListRelationFilter)
  @IsOptional()
  @Field(() => ReviewsListRelationFilter, {
    nullable: true,
  })
  reviewsItems?: ReviewsListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => WishlistItemsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WishlistItemsListRelationFilter)
  @IsOptional()
  @Field(() => WishlistItemsListRelationFilter, {
    nullable: true,
  })
  wishlistItemsItems?: WishlistItemsListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CartItemsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CartItemsListRelationFilter)
  @IsOptional()
  @Field(() => CartItemsListRelationFilter, {
    nullable: true,
  })
  cartItemsItems?: CartItemsListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrderItemListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrderItemListRelationFilter)
  @IsOptional()
  @Field(() => OrderItemListRelationFilter, {
    nullable: true,
  })
  orderItems?: OrderItemListRelationFilter;
}

export { ProductWhereInput as ProductWhereInput };
