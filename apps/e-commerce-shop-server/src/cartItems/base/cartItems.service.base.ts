/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  CartItems as PrismaCartItems,
  ShoppingCart as PrismaShoppingCart,
  Product as PrismaProduct,
} from "@prisma/client";

export class CartItemsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CartItemsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.cartItems.count(args);
  }

  async cartItemsItems(
    args: Prisma.CartItemsFindManyArgs
  ): Promise<PrismaCartItems[]> {
    return this.prisma.cartItems.findMany(args);
  }
  async cartItems(
    args: Prisma.CartItemsFindUniqueArgs
  ): Promise<PrismaCartItems | null> {
    return this.prisma.cartItems.findUnique(args);
  }
  async createCartItems(
    args: Prisma.CartItemsCreateArgs
  ): Promise<PrismaCartItems> {
    return this.prisma.cartItems.create(args);
  }
  async updateCartItems(
    args: Prisma.CartItemsUpdateArgs
  ): Promise<PrismaCartItems> {
    return this.prisma.cartItems.update(args);
  }
  async deleteCartItems(
    args: Prisma.CartItemsDeleteArgs
  ): Promise<PrismaCartItems> {
    return this.prisma.cartItems.delete(args);
  }

  async getShoppingCart(parentId: string): Promise<PrismaShoppingCart | null> {
    return this.prisma.cartItems
      .findUnique({
        where: { id: parentId },
      })
      .shoppingCart();
  }

  async getProduct(parentId: string): Promise<PrismaProduct | null> {
    return this.prisma.cartItems
      .findUnique({
        where: { id: parentId },
      })
      .product();
  }
}
