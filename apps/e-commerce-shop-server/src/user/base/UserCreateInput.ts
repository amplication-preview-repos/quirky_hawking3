/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Min,
  Max,
  ValidateNested,
} from "class-validator";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { OrderCreateNestedManyWithoutUsersInput } from "./OrderCreateNestedManyWithoutUsersInput";
import { Type } from "class-transformer";
import { ReviewsCreateNestedManyWithoutUsersInput } from "./ReviewsCreateNestedManyWithoutUsersInput";
import { WishlistCreateNestedManyWithoutUsersInput } from "./WishlistCreateNestedManyWithoutUsersInput";
import { ShoppingCartCreateNestedManyWithoutUsersInput } from "./ShoppingCartCreateNestedManyWithoutUsersInput";

@InputType()
class UserCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  userId?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  passwordHash?: string | null;

  @ApiProperty({
    required: false,
    type: () => OrderCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => OrderCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => OrderCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  orders?: OrderCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ReviewsCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ReviewsCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ReviewsCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  reviewsItems?: ReviewsCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => WishlistCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => WishlistCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => WishlistCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  wishlists?: WishlistCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ShoppingCartCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ShoppingCartCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ShoppingCartCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  shoppingCarts?: ShoppingCartCreateNestedManyWithoutUsersInput;
}

export { UserCreateInput as UserCreateInput };
